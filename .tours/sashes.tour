{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "sashes",
  "steps": [
    {
      "file": "src/vs/base/browser/ui/sash/sash.ts",
      "description": "The sash is our UI component which lets the user resize UI elements. We use it across the workbench in our resizeable views, in our editor and workbench grids, in our diff and side-by-side editors, even in some of our widgets like the suggest and find widgets. A sash can either be vertical or horizontal. Usually invisible until in actual use, the sash shows a hover decoration when hovered, letting the user know that it can be dragged around.\r\n\r\n![sash](https://user-images.githubusercontent.com/22350/209339844-50f97ef5-9d6d-492f-b0df-f7fab7aeaf8a.gif)",
      "line": 248
    },
    {
      "file": "src/vs/base/browser/ui/sash/sash.ts",
      "description": "When in development mode, switching `DEBUG` to `true` lets you _see_ the sashes across the entire workbench, including corner spots and enablement state.\r\n\r\n![debug](https://user-images.githubusercontent.com/22350/209339836-b188ce3d-713f-43e8-b058-bb27b52fa963.png)",
      "line": 20,
      "selection": {
        "start": {
          "line": 2,
          "character": 1
        },
        "end": {
          "line": 3,
          "character": 34
        }
      }
    },
    {
      "file": "src/vs/base/browser/ui/sash/sash.ts",
      "description": "A sash can have a pair of orthogonal sashes configured: one for the start and one for the end. In vertical sashes, _start_ means _top_ and _end_ means _bottom_. In horizontal sashes, _start_ means _left_ and _end_ means _right_. An orthogonal sash should be _orthogonal_ to and perfectly aligned with the main sash. When set, a corner draggable area will be created which lets the user resize both sashes at the same time.\r\n\r\nIn the following example, there are two sashes: the vertical sash to the right of the sidebar and the horizontal sash below the editor. The vertical sash has been configured to be the _start_ orthogonal sash to the horizontal one. In debug mode, you can see the red corner highlighting that draggable zone:\r\n\r\n![orthogonal](https://user-images.githubusercontent.com/22350/209339841-e61875cf-8245-4798-a77d-10b31418eb63.gif)\r\n\r\nThe same horizontal sash can additionally have one _end_ orthogonal sash. This happens when, for example, the secondary side bar is visible:\r\n\r\n![orthogonal](https://user-images.githubusercontent.com/22350/209339843-936a6235-a1ac-49a1-93a1-cb6cdc0ed51b.gif)",
      "line": 273
    },
    {
      "file": "src/vs/base/browser/ui/splitview/splitview.ts",
      "description": "The _orthogonal sash_ concept can apply to other widgets as well. The the splitview, for example. It's the widget which renders views across one direction and allows the user to resize each view, according to sizing constraints:\r\n\r\n![debug](https://user-images.githubusercontent.com/22350/209339846-9713bf3e-49c4-4724-b34d-b3aee419387d.gif)\r\n\r\nNotice how the vertical sash (to the right of the side bar) can be configured as the _orthogonal end_ sash to the splitview, effectively creating draggable corners at the end of each sash within the entire split view:\r\n\r\n![debug](https://user-images.githubusercontent.com/22350/209339848-e3d4d345-7d44-4325-ba82-0ff64a6ac219.gif)",
      "line": 476
    },
    {
      "file": "src/vs/base/browser/ui/grid/grid.ts",
      "description": "A grid widget can also have orthogonal sashes. But it can actually have 4 of them instead of just a _start_ and _end_ orthogonal sashes: _top_, _bottom_, _left_ and _right_. This is visible when you have a complex editor grid configured and it creates draggable corners with both the vertical sash next to the side bar as well as the horizontal sash above the panel:\r\n\r\n![debug](https://user-images.githubusercontent.com/22350/209339840-d8d2db52-5e2d-4f90-94ef-a695dc54f527.gif)",
      "line": 276
    },
    {
      "file": "src/vs/editor/browser/widget/diffEditorWidget.ts",
      "description": "Since the _orthogonal sash_ concept is so universal and specific only to sashes, with the right wiring we can create even more useful draggable corners. In this example, the diff editor can be configured with boundary sashes as well and make use of the _bottom_ orthogonal sash to create another useful corner:\r\n\r\n![diff](https://user-images.githubusercontent.com/22350/209339837-eb84a508-2046-4e04-b8f7-7343d8461b4a.gif)",
      "line": 2069
    }
  ],
  "ref": "f4bfb23b333e47435e664ad5e978256869458d21"
}
